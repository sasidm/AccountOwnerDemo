// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccountOwnerServer.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20200311123537_InitialSeed")]
    partial class InitialSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03e91478-5608-4132-a753-d494dafce00b"),
                            AccountType = "Domestic",
                            DateCreated = new DateTime(2003, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OwnerId = new Guid("24fd81f8-d58a-4bcc-9f35-dc6cd5641906")
                        },
                        new
                        {
                            Id = new Guid("356a5a9b-64bf-4de0-bc84-5395a1fdc9c4"),
                            AccountType = "27 Colored Row",
                            DateCreated = new DateTime(1974, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OwnerId = new Guid("24fd81f8-d58a-4bcc-9f35-dc6cd5641906")
                        });
                });

            modelBuilder.Entity("Entities.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("owner");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24fd81f8-d58a-4bcc-9f35-dc6cd5641906"),
                            Address = "61 Wellfield Road",
                            DateOfBirth = new DateTime(1980, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John Keen"
                        },
                        new
                        {
                            Id = new Guid("261e1685-cf26-494c-b17c-3546e65f5620"),
                            Address = "27 Colored Row",
                            DateOfBirth = new DateTime(1974, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anna Bosh"
                        });
                });

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.HasOne("Entities.Models.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
